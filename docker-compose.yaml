version: "3.9"

x-ariflow_common:
  &airflow-common
  build: .
  environment: 
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      AIRFLOW__WEBSERVER__WORKERS: 8
      AIRFLOW__WEBSERVER__RELOAD_ON_PLUGIN_CHANGE: 'true'
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__DAGS_FOLDER: /app/src/dags
      AIRFLOW__CORE__PLUGINS_FOLDER: /app/src/plugins
      AIRFLOW__LOGGING__BASE_LOG_FOLDER: /app/src/logs
      AIRFLOW__CELERY__BROKER_URL: amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672/
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS: 'false'
      AIRFLOW__CORE__LAZY_LOAD_PLUGINS: 'false'
      AIRFLOW__CORE__EXECUTE_TASKS_NEW_PYTHON_INTERPRETER: 'false'
      AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth,airflow.api.auth.backend.session'
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
      _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}
  volumes:
    - ./app:/app/src
  depends_on:
    &airflow-common-depends-on
    rabbitmq:
      condition: service_healthy
    postgres:
      condition: service_healthy

services:
  postgres:
    image: postgres:15
    environment:
      PGDATA: "/var/lib/postgresql/data/pgdata"
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      retries: 5
    restart: always

  rabbitmq:
    image: rabbitmq:latest
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      retries: 3
    restart: always

  airflow_initdb:
    <<: *airflow-common
    command: bash -c "airflow db init  && airflow db upgrade && airflow db check && airflow users  create --role Admin --username ${AIRFLOW_USER} --email admin --firstname admin --lastname admin --password ${AIRFLOW_PASSWORD}"
    depends_on:
      <<: *airflow-common-depends-on

  airflow_scheduler:
    <<: *airflow-common
    command: airflow scheduler
    restart: always
    depends_on:
      - postgres
      - airflow_initdb
      - rabbitmq


  airflow_worker:
    <<: *airflow-common
    command: airflow celery worker
    restart: always
    depends_on:
      - postgres
      - airflow_initdb
      - rabbitmq

  airflow_webserver:
    <<: *airflow-common
    command: bash -c "airflow webserver --port 8080"
    ports:
      - 8080:8080
    restart: always
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 5s
      retries: 5
    depends_on:
      - postgres
      - airflow_worker
      - airflow_scheduler
      - rabbitmq

  airflow_flower:
    <<: *airflow-common
    command: airflow celery flower
    ports:
      - 5555:5555
    restart: always
    depends_on:
      - airflow_worker
      
volumes:
  pgdata: